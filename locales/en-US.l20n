<qtav_about "A multimedia playback framework based on Qt + FFmpeg. Cross platform. High performace. Easy to use and develop">

<DOWNLOADS "DOWNLOADS">

<Features "Features">

<playback_funcitons "Most playback functions">
<playback_funcitons_detail """
Play, pause, speed, seek, subtitle, volume, audio channel, audio track, dynamically renderer switching, video equalizer, custom filters for both window and video frame, network stream, video crop,
  multiple renderers, hardware decoding... With the help of FFmpeg, QtAV is able to play most media formats, without installing other codecs.
""">
<rt_preview "Real Time Preview">
<rt_preview_detail "New experience">
<hi_video "High Resolution High Frame Rate Video">
<hi_video_detail "Better experience than any other players(Windows, Linux, Mac etc) with software decoding. Test file: ">
<hw_platforms "Hardware Decoding for Many Platforms">
<hw_platforms_detail """
Supports DXVA, VA-API, CUDA, VDA, Cedarv. Direct rendering(0 copy, the same thing as Lavfilters native mode) is also supported for VA-API and it gives you better performance.
Direct rendering will be support for DXVA, CUDA and VDA in the future.
""">
<hevc_dxva "DXVA2 HEVC Hardwared Decoding">
<hevc_dxva_detail "New Intel GPU and driver is required. Tested: Intel HD Graphics 4600, NVIDIA GT750M">
<cuda_win "CUDA for Windows and Linux">
<cuda_win_detail "Decoding with CUDA is supported since 1.3.3. It's the first player/library supports CUDA on Linux(tell me if i'm wrong)">
<hi10p_cuda "CUDA Hi10P Hardware Decoding">
<hi10p_cuda_detail "Some NVIDIA cards support Hi10P. Better performace than any other players. I tested GT540M and GT750M.">
<hi10p_gl "Hi10P OpenGL and OpenGL ES2 Renderering">
<hi10p_gl_detail """
Rendering 16-bit YUV is supported in QtAV using OpenGL and OpenGL ES2(and ANGLE). Supported formats: 9, 10, 12, 14, 16 bit planar YUV, both little/big endian.
AFAIK, those famous player such as mpv, VLC, XBMC and mplayer can not renderering it using OpenGL ES2. They only support desktop OpenGL.
Obviously QtAV has better performance. I tested a 10bit h264 video (download here: http://ps-auxw.de/10bit-h264-sample) on HTC Butterfly S. QtAV CPU usage is about 10% less than VLC!
""">

<platforms "Platforms">
<platforms_detail """
  Currently QtAV can run on Windows, Linux, Mac OSX, Android, iOS(works fine on simulator), MeeGo, Sailfish OS(since QtAV1.3.3).
  Other platforms such as WinRT, Windows Phone, BlackBerry will also be supported if I have development environment and devices.
""">

<qtmm_qtav "Why Not QtMultimedia? Why QtAV?">
<qtmm_qtav_qt4 "QtMultimedia in Qt4 is poor. QtAV works fine for both Qt4 and Qt5.">
<qtmm_qtav_depends """
  QtMultimedia's implemention is platform depended. It use dshow on windows, gstream on linux etc. May be not an easy work to support a new platform.
  While QtAV use FFmpeg, works for most platforms. No additional work required.
""">
<qtmm_qtav_codecs "Additional codecs may be required to make QtMultimedia work">
<qtmm_qtav_formats "QtAV supports more video formats">
<qtmm_qtav_features "QtAV has more powerful playback features and better performace than QtMultimedia. For example, hardware decoding, subtitle.">

<easy_api "Easy API for Developers">

<donate "Donate">
<donate_desc """
  Donations are used solely for purchasing hardware to improve and extend QtAV.
""">
<donate_gpu "AMD, NVIDIA graphics cards">
<donate_ios "iOS development environment">
<donate_devices "Sailfish, Ubuntu One, BlackBerry and Windows Phone devices etc">
<donate_contributors "Donate to contributors">
<donate_website "Website maintenance">
